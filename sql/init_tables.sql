
-- ‚ö†Ô∏è ATTENTION ‚ö†Ô∏è
-- Ne pas d√©commenter les lignes DROP TABLE si vous ne savez pas ce que vous faites.

-- DROP TABLE IF EXISTS utilisateurs;
-- DROP TABLE IF EXISTS codes_premium;
-- DROP TABLE IF EXISTS garanties;
-- DROP TABLE IF EXISTS tickets;

-- üë§ Utilisateurs (li√©s √† Discord)
CREATE TABLE IF NOT EXISTS utilisateurs (
  id_discord VARCHAR(64) PRIMARY KEY, -- ID utilisateur Discord
  username VARCHAR(255) NOT NULL,     -- Nom d'utilisateur
  premium BOOLEAN DEFAULT FALSE,      -- A le r√¥le premium ou non
  date_premium DATETIME NULL,         -- Date d'activation du premium
  date_creation DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- üîê Codes premium √† usage unique, non nominatifs au d√©part
CREATE TABLE IF NOT EXISTS codes_premium (
  code VARCHAR(64) PRIMARY KEY,           -- Le code √† entrer
  utilis√© BOOLEAN DEFAULT FALSE,          -- Le code a-t-il √©t√© utilis√© ?
  id_utilisateur VARCHAR(64) NULL,        -- ID Discord de l'utilisateur qui l'a utilis√©
  date_utilisation DATETIME NULL,         -- Quand le code a √©t√© utilis√©
  date_creation DATETIME DEFAULT CURRENT_TIMESTAMP
);


-- üõ°Ô∏è Garantie 1 an
CREATE TABLE IF NOT EXISTS garanties (
  id_discord VARCHAR(64) PRIMARY KEY,     -- Utilisateur concern√©
  date_activation DATETIME NOT NULL,      -- Date d'activation de la garantie
  date_expiration DATETIME NOT NULL,      -- Date de fin de garantie
  rappel_envoy√© BOOLEAN DEFAULT FALSE     -- Rappel envoy√© ?
);

-- üé´ Tickets de support
CREATE TABLE IF NOT EXISTS tickets (
  id_ticket INT AUTO_INCREMENT PRIMARY KEY,
  id_discord VARCHAR(64) NOT NULL,         -- Cr√©ateur
  type_ticket VARCHAR(50) NOT NULL,        -- Ex: "support", "commande", "candidature"
  statut VARCHAR(20) DEFAULT 'ouvert',     -- "ouvert", "ferm√©", etc.
  date_ouverture DATETIME DEFAULT CURRENT_TIMESTAMP,
  date_fermeture DATETIME NULL
);
